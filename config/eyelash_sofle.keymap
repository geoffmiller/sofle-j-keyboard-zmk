#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};


/ {

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        /* Layer 0 (Base)
         *
         *  ESC     1       2       3       4       5         UP      6       7       8       9       0       DEL    
         *  TAB     Q       W       E       R       T         DN      Y       U       I       O       P       BSLH   
         *  LSHFT   A       S       D       F       G         LT      H       J       K       L       ;       RSFT/' 
         *  LSHFT   Z       X       C       V       B         RT      N       M       ,       .       /       RSFT   
         *  MUTE    LCTL    LALT    LGUI    SPC     LT0/ENT   ENT     LT1/ENT BSPC    RGUI    RALT    CAPS           
         */
        layer_0 {
            bindings = <
&kp ESC    &kp N1      &kp N2       &kp N3       &kp N4    &kp N5       &kp UP_ARROW     &kp N6       &kp N7        &kp N8        &kp N9        &kp N0   &kp DELETE
&kp TAB    &kp Q       &kp W        &kp E        &kp R     &kp T        &kp DOWN_ARROW   &kp Y        &kp U         &kp I         &kp O         &kp P    &kp BSLH
&kp LSHFT  &kp A       &kp S        &kp D        &kp F     &kp G        &kp LEFT_ARROW   &kp H        &kp J         &kp K         &kp L         &kp SEMI &mt RSHIFT APOS
&kp LSHFT  &mt LCTRL Z &kp X        &kp C        &kp V     &kp B        &kp RIGHT_ARROW  &kp N        &kp M         &kp COMMA     &kp DOT       &kp FSLH &kp RIGHT_SHIFT
&kp C_MUTE &kp LCTRL   &kp LEFT_ALT &kp LEFT_GUI &kp SPACE &lt 1 ENTER  &kp ENTER        &lt 2 ENTER  &kp BACKSPACE &kp RIGHT_GUI &kp RIGHT_ALT &kp CAPS
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        /* Layer 1 (Fn)
         *
         *  ~       F1      F2      F3      F4      F5        MMV_UP  HOME    END     F8      F9      -       =      
         *  trans   F11     F12     MCLK    RCLK    MB4       MMV_DN  MSC_LT  MSC_RT  {       }       trans   trans  
         *  trans   trans   trans   trans   trans   MB5       MMV_LT  MSC_DN  MSC_UP  [       ]       trans   trans  
         *  trans   RGB_OFF RGB_ON  RGB_EFF RGB_EFR RGB_SPI   MMV_RT  RGB_BRI RGB_BRD trans   trans   trans   trans  
         *  MUTE    trans   trans   trans   trans   trans     LCLK    RCLK    LT_ARW  DN_ARW  UP_ARW  RT_ARW         
         */
        layer_1 {
            bindings = <
&kp TILDE   &kp F1          &kp F2         &kp F3          &kp F4           &kp F5           &mmv MOVE_UP     &kp HOME        &kp END         &kp F8             &kp F9            &kp MINUS       &kp EQUAL
&trans      &kp F11         &kp F12        &mkp MCLK       &mkp RCLK        &mkp MB4         &mmv MOVE_DOWN   &msc SCRL_LEFT  &msc SCRL_RIGHT &kp LBRC           &kp RBRC          &trans          &trans
&trans      &trans          &trans         &trans          &trans           &mkp MB5         &mmv MOVE_LEFT   &msc SCRL_DOWN  &msc SCRL_UP    &kp LEFT_BRACKET   &kp RIGHT_BRACKET &trans          &trans
&trans      &rgb_ug RGB_OFF &rgb_ug RGB_ON &rgb_ug RGB_EFF &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &mmv MOVE_RIGHT  &kp LEFT_ARROW  &kp DOWN_ARROW   &kp UP_ARROW      &kp RIGHT_ARROW   &trans          &trans
&kp C_MUTE  &trans          &trans         &trans          &trans           &trans           &mkp LCLK        &mkp RCLK       &kp LEFT_ARROW  &kp DOWN_ARROW     &kp UP_ARROW      &kp RIGHT_ARROW     
            >;

            display-name = "Layer 1";
            sensor-bindings = <&scroll_encoder>;
        };

        /* Layer 2 (BT/Media)
         *
         *  `       BT0     BT1     BT2     BT3     BT4       MMV_UP  F6      F7      F8      F9      F10     trans  
         *  trans   CLR     CLRALL  trans   trans   trans     MMV_DN  trans   trans   F11     F12     _       +      
         *  trans   OUT_USB OUT_BLE trans   trans   trans     MMV_LT  trans   trans   trans   trans   {       }      
         *  trans   RST     trans   BOOT    trans   trans     MMV_RT  trans   trans   RST     OFF     BOOT    trans  
         *  trans   trans   trans   trans   trans   trans     LCLK    trans   trans   trans   trans   trans          
         */
        layer_2 {
            bindings = <
&kp GRAVE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6         &kp F7          &kp F8      &kp F9     &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &msc SCRL_LEFT &msc SCRL_RIGHT &kp F11     &kp F12    &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &msc MOVE_DOWN &msc MOVE_UP    &trans      &trans     &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &trans         &trans          &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans         &trans          &trans      &trans     &trans
            >;

            display-name = "Layer 2";
            sensor-bindings = <&scroll_encoder>;
        };

        /* Layer 3 (Unused)
         *
         *  trans   trans   trans   trans   trans   trans     trans   trans   trans   trans   trans   trans   trans  
         *  trans   trans   trans   trans   trans   trans     trans   trans   trans   trans   trans   trans   trans  
         *  trans   trans   trans   trans   trans   trans     trans   trans   trans   trans   trans   trans   trans  
         *  trans   trans   trans   trans   trans   trans     trans   trans   trans   trans   trans   trans   trans  
         *  trans   trans   trans   trans   trans   trans     trans   trans   trans   trans   trans   trans          
         */
        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "Layer 3";
        };
    };
};
